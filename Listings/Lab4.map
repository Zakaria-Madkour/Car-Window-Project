Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to motordriver.o(.text.motor_module_init) for motor_module_init
    main.o(.text.main) refers to motordriver.o(.text.test_motor) for test_motor
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_Init) refers to dio.o(.text.DIO_Init) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePin) refers to dio.o(.text.DIO_WritePin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePort) refers to dio.o(.text.DIO_WritePort) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPin) refers to dio.o(.text.DIO_ReadPin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPort) refers to dio.o(.text.DIO_ReadPort) for [Anonymous Symbol]
    motordriver.o(.text.motor_module_init) refers to motordriver.o(.text.port_init) for port_init
    motordriver.o(.text.motor_module_init) refers to motordriver.o(.text.config_PWM_MOTOR) for config_PWM_MOTOR
    motordriver.o(.ARM.exidx.text.motor_module_init) refers to motordriver.o(.text.motor_module_init) for [Anonymous Symbol]
    motordriver.o(.text.port_init) refers to dio.o(.text.DIO_Init) for DIO_Init
    motordriver.o(.ARM.exidx.text.port_init) refers to motordriver.o(.text.port_init) for [Anonymous Symbol]
    motordriver.o(.text.motor1_up) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motordriver.o(.ARM.exidx.text.motor1_up) refers to motordriver.o(.text.motor1_up) for [Anonymous Symbol]
    motordriver.o(.text.motor1_down) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motordriver.o(.ARM.exidx.text.motor1_down) refers to motordriver.o(.text.motor1_down) for [Anonymous Symbol]
    motordriver.o(.text.motor1_off) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motordriver.o(.ARM.exidx.text.motor1_off) refers to motordriver.o(.text.motor1_off) for [Anonymous Symbol]
    motordriver.o(.text.motor2_up) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motordriver.o(.ARM.exidx.text.motor2_up) refers to motordriver.o(.text.motor2_up) for [Anonymous Symbol]
    motordriver.o(.text.motor2_down) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motordriver.o(.ARM.exidx.text.motor2_down) refers to motordriver.o(.text.motor2_down) for [Anonymous Symbol]
    motordriver.o(.text.motor2_off) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motordriver.o(.ARM.exidx.text.motor2_off) refers to motordriver.o(.text.motor2_off) for [Anonymous Symbol]
    motordriver.o(.ARM.exidx.text.config_PWM_MOTOR) refers to motordriver.o(.text.config_PWM_MOTOR) for [Anonymous Symbol]
    motordriver.o(.text.test_motor) refers to motordriver.o(.text.motor_module_init) for motor_module_init
    motordriver.o(.text.test_motor) refers to motordriver.o(.text.motor1_up) for motor1_up
    motordriver.o(.text.test_motor) refers to motordriver.o(.text.motor1_off) for motor1_off
    motordriver.o(.text.test_motor) refers to motordriver.o(.text.motor1_down) for motor1_down
    motordriver.o(.text.test_motor) refers to motordriver.o(.text.motor2_up) for motor2_up
    motordriver.o(.text.test_motor) refers to motordriver.o(.text.motor2_off) for motor2_off
    motordriver.o(.text.test_motor) refers to motordriver.o(.text.motor2_down) for motor2_down
    motordriver.o(.ARM.exidx.text.test_motor) refers to motordriver.o(.text.test_motor) for [Anonymous Symbol]
    boardporting.o(.text.BOARD_init) refers to boardporting.o(.text.PORTD_init) for PORTD_init
    boardporting.o(.text.BOARD_init) refers to boardporting.o(.text.PORTE_init) for PORTE_init
    boardporting.o(.text.BOARD_init) refers to boardporting.o(.text.PORTA_init) for PORTA_init
    boardporting.o(.text.BOARD_init) refers to boardporting.o(.text.PORTC_init) for PORTC_init
    boardporting.o(.ARM.exidx.text.BOARD_init) refers to boardporting.o(.text.BOARD_init) for [Anonymous Symbol]
    boardporting.o(.text.PORTD_init) refers to dio.o(.text.DIO_Init) for DIO_Init
    boardporting.o(.ARM.exidx.text.PORTD_init) refers to boardporting.o(.text.PORTD_init) for [Anonymous Symbol]
    boardporting.o(.text.PORTA_init) refers to dio.o(.text.DIO_Init) for DIO_Init
    boardporting.o(.text.PORTA_init) refers to boardporting.o(.text.on_switch) for on_switch
    boardporting.o(.text.PORTA_init) refers to boardporting.o(.text.off_switch) for off_switch
    boardporting.o(.ARM.exidx.text.PORTA_init) refers to boardporting.o(.text.PORTA_init) for [Anonymous Symbol]
    boardporting.o(.ARM.exidx.text.driver_up_pressed) refers to boardporting.o(.text.driver_up_pressed) for [Anonymous Symbol]
    boardporting.o(.ARM.exidx.text.driver_down_pressed) refers to boardporting.o(.text.driver_down_pressed) for [Anonymous Symbol]
    boardporting.o(.text.PORTE_init) refers to dio.o(.text.DIO_Init) for DIO_Init
    boardporting.o(.ARM.exidx.text.PORTE_init) refers to boardporting.o(.text.PORTE_init) for [Anonymous Symbol]
    boardporting.o(.ARM.exidx.text.passenger_up_pressed) refers to boardporting.o(.text.passenger_up_pressed) for [Anonymous Symbol]
    boardporting.o(.ARM.exidx.text.passenger_down_pressed) refers to boardporting.o(.text.passenger_down_pressed) for [Anonymous Symbol]
    boardporting.o(.ARM.exidx.text.off_switch) refers to boardporting.o(.text.off_switch) for [Anonymous Symbol]
    boardporting.o(.ARM.exidx.text.on_switch) refers to boardporting.o(.text.on_switch) for [Anonymous Symbol]
    boardporting.o(.text.PORTC_init) refers to dio.o(.text.DIO_Init) for DIO_Init
    boardporting.o(.ARM.exidx.text.PORTC_init) refers to boardporting.o(.text.PORTC_init) for [Anonymous Symbol]
    boardporting.o(.text.GPIOD_Handler) refers to main.o(.bss.limit_semaphore) for limit_semaphore
    boardporting.o(.text.GPIOD_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    boardporting.o(.text.GPIOD_Handler) refers to main.o(.bss.limit_queue) for limit_queue
    boardporting.o(.text.GPIOD_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    boardporting.o(.ARM.exidx.text.GPIOD_Handler) refers to boardporting.o(.text.GPIOD_Handler) for [Anonymous Symbol]
    boardporting.o(.text.GPIOA_Handler) refers to main.o(.bss.driver_semaphore) for driver_semaphore
    boardporting.o(.text.GPIOA_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    boardporting.o(.text.GPIOA_Handler) refers to main.o(.bss.driver_queue) for driver_queue
    boardporting.o(.text.GPIOA_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    boardporting.o(.text.GPIOA_Handler) refers to boardporting.o(.text.on_switch) for on_switch
    boardporting.o(.text.GPIOA_Handler) refers to boardporting.o(.text.off_switch) for off_switch
    boardporting.o(.ARM.exidx.text.GPIOA_Handler) refers to boardporting.o(.text.GPIOA_Handler) for [Anonymous Symbol]
    boardporting.o(.text.GPIOE_Handler) refers to main.o(.bss.passenger_semaphore) for passenger_semaphore
    boardporting.o(.text.GPIOE_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    boardporting.o(.text.GPIOE_Handler) refers to main.o(.bss.passenger_queue) for passenger_queue
    boardporting.o(.text.GPIOE_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    boardporting.o(.ARM.exidx.text.GPIOE_Handler) refers to boardporting.o(.text.GPIOE_Handler) for [Anonymous Symbol]
    boardporting.o(.text.GPIOC_Handler) refers to main.o(.bss.jam_semaphore) for jam_semaphore
    boardporting.o(.text.GPIOC_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    boardporting.o(.text.GPIOC_Handler) refers to main.o(.bss.jam_queue) for jam_queue
    boardporting.o(.text.GPIOC_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    boardporting.o(.ARM.exidx.text.GPIOC_Handler) refers to boardporting.o(.text.GPIOC_Handler) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.driver_worker) refers to tasks.o(.text.driver_worker) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.passenger_worker) refers to tasks.o(.text.passenger_worker) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.limit_worker) refers to tasks.o(.text.limit_worker) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.jam_worker) refers to tasks.o(.text.jam_worker) for [Anonymous Symbol]
    states.o(.text.create_queues) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    states.o(.text.create_queues) refers to main.o(.bss.limit_queue) for limit_queue
    states.o(.text.create_queues) refers to main.o(.bss.jam_queue) for jam_queue
    states.o(.text.create_queues) refers to main.o(.bss.driver_queue) for driver_queue
    states.o(.text.create_queues) refers to main.o(.bss.passenger_queue) for passenger_queue
    states.o(.ARM.exidx.text.create_queues) refers to states.o(.text.create_queues) for [Anonymous Symbol]
    states.o(.text.create_semaphores) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    states.o(.text.create_semaphores) refers to main.o(.bss.limit_semaphore) for limit_semaphore
    states.o(.text.create_semaphores) refers to main.o(.bss.jam_semaphore) for jam_semaphore
    states.o(.text.create_semaphores) refers to main.o(.bss.driver_semaphore) for driver_semaphore
    states.o(.text.create_semaphores) refers to main.o(.bss.passenger_semaphore) for passenger_semaphore
    states.o(.ARM.exidx.text.create_semaphores) refers to states.o(.text.create_semaphores) for [Anonymous Symbol]
    states.o(.text.create_mutex) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    states.o(.text.create_mutex) refers to main.o(.bss.driver_motor_mutex) for driver_motor_mutex
    states.o(.text.create_mutex) refers to main.o(.bss.passenger_motor_mutex) for passenger_motor_mutex
    states.o(.text.create_mutex) refers to main.o(.bss.driver_state_mutex) for driver_state_mutex
    states.o(.text.create_mutex) refers to main.o(.bss.passenger_state_mutex) for passenger_state_mutex
    states.o(.ARM.exidx.text.create_mutex) refers to states.o(.text.create_mutex) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to boardporting.o(.text.GPIOA_Handler) for GPIOA_Handler
    startup_tm4c123.o(RESET) refers to boardporting.o(.text.GPIOC_Handler) for GPIOC_Handler
    startup_tm4c123.o(RESET) refers to boardporting.o(.text.GPIOD_Handler) for GPIOD_Handler
    startup_tm4c123.o(RESET) refers to boardporting.o(.text.GPIOE_Handler) for GPIOE_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks_1.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks_1.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_5.o(.text.pvPortMalloc) refers to heap_5.o(.bss.pxEnd) for pxEnd
    heap_5.o(.text.pvPortMalloc) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_5.o(.text.pvPortMalloc) refers to heap_5.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_5.o(.text.pvPortMalloc) refers to heap_5.o(.bss.xStart) for xStart
    heap_5.o(.text.pvPortMalloc) refers to heap_5.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_5.o(.text.pvPortMalloc) refers to heap_5.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_5.o(.text.pvPortMalloc) refers to heap_5.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_5.o(.text.pvPortMalloc) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_5.o(.ARM.exidx.text.pvPortMalloc) refers to heap_5.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_5.o(.text.prvInsertBlockIntoFreeList) refers to heap_5.o(.bss.xStart) for xStart
    heap_5.o(.text.prvInsertBlockIntoFreeList) refers to heap_5.o(.bss.pxEnd) for pxEnd
    heap_5.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_5.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_5.o(.text.vPortFree) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_5.o(.text.vPortFree) refers to heap_5.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_5.o(.text.vPortFree) refers to heap_5.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_5.o(.text.vPortFree) refers to heap_5.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_5.o(.text.vPortFree) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_5.o(.ARM.exidx.text.vPortFree) refers to heap_5.o(.text.vPortFree) for [Anonymous Symbol]
    heap_5.o(.text.xPortGetFreeHeapSize) refers to heap_5.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_5.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_5.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_5.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_5.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_5.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_5.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_5.o(.text.pvPortCalloc) refers to heap_5.o(.text.pvPortMalloc) for pvPortMalloc
    heap_5.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_5.o(.ARM.exidx.text.pvPortCalloc) refers to heap_5.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_5.o(.text.vPortDefineHeapRegions) refers to heap_5.o(.bss.pxEnd) for pxEnd
    heap_5.o(.text.vPortDefineHeapRegions) refers to heap_5.o(.bss.xStart) for xStart
    heap_5.o(.text.vPortDefineHeapRegions) refers to heap_5.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_5.o(.text.vPortDefineHeapRegions) refers to heap_5.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_5.o(.ARM.exidx.text.vPortDefineHeapRegions) refers to heap_5.o(.text.vPortDefineHeapRegions) for [Anonymous Symbol]
    heap_5.o(.text.vPortGetHeapStats) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_5.o(.text.vPortGetHeapStats) refers to heap_5.o(.bss.xStart) for xStart
    heap_5.o(.text.vPortGetHeapStats) refers to heap_5.o(.bss.pxEnd) for pxEnd
    heap_5.o(.text.vPortGetHeapStats) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_5.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_5.o(.text.vPortGetHeapStats) refers to heap_5.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_5.o(.text.vPortGetHeapStats) refers to heap_5.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_5.o(.text.vPortGetHeapStats) refers to heap_5.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_5.o(.text.vPortGetHeapStats) refers to heap_5.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_5.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_5.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_5.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_5.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_5.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCreate) refers to heap_5.o(.text.pvPortMalloc) for pvPortMalloc
    tasks_1.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks_1.o(.text.xTaskCreate) refers to heap_5.o(.text.vPortFree) for vPortFree
    tasks_1.o(.text.xTaskCreate) refers to tasks_1.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks_1.o(.text.xTaskCreate) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks_1.o(.ARM.exidx.text.xTaskCreate) refers to tasks_1.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks_1.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks_1.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks_1.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks_1.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks_1.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.vTaskDelete) refers to tasks_1.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks_1.o(.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks_1.o(.text.prvDeleteTCB) refers to heap_5.o(.text.vPortFree) for vPortFree
    tasks_1.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks_1.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks_1.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspendAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks_1.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks_1.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.vTaskDelay) refers to tasks_1.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.ARM.exidx.text.eTaskGetState) refers to tasks_1.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.uxTaskPriorityGet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks_1.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks_1.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks_1.o(.ARM.exidx.text.vTaskSuspend) refers to tasks_1.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks_1.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks_1.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskResume) refers to tasks_1.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks_1.o(.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks_1.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.prvIdleTask) for prvIdleTask
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.rodata.str1.1) for .L.str
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.xTaskCreate) for xTaskCreate
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks_1.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks_1.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.prvIdleTask) refers to tasks_1.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskEndScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks_1.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks_1.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks_1.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCount) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks_1.o(.text.pcTaskGetName) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pcTaskGetName) refers to tasks_1.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks_1.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks_1.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks_1.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks_1.o(.text.prvListTasksWithinSingleList) refers to tasks_1.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks_1.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks_1.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetIdleTaskHandle) refers to tasks_1.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks_1.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks_1.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskStepTick) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskStepTick) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskStepTick) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskStepTick) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskStepTick) refers to tasks_1.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    tasks_1.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks_1.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks_1.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskMissedYield) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks_1.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks_1.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks_1.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks_1.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks_1.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks_1.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskResetEventItemValue) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks_1.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks_1.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks_1.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks_1.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyStateClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks_1.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskGenericNotifyValueClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks_1.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks_1.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks_1.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks_1.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.driver_motor_mutex), (4 bytes).
    Removing main.o(.bss.passenger_motor_mutex), (4 bytes).
    Removing main.o(.bss.driver_state_mutex), (4 bytes).
    Removing main.o(.bss.passenger_state_mutex), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing dio.o(.text), (0 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_Init), (8 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePin), (8 bytes).
    Removing dio.o(.text.DIO_WritePort), (122 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePort), (8 bytes).
    Removing dio.o(.text.DIO_ReadPin), (188 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPin), (8 bytes).
    Removing dio.o(.text.DIO_ReadPort), (122 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPort), (8 bytes).
    Removing motordriver.o(.text), (0 bytes).
    Removing motordriver.o(.ARM.exidx.text.motor_module_init), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.port_init), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motor1_up), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motor1_down), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motor1_off), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motor2_up), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motor2_down), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motor2_off), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.config_PWM_MOTOR), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.test_motor), (8 bytes).
    Removing boardporting.o(.text), (0 bytes).
    Removing boardporting.o(.text.BOARD_init), (20 bytes).
    Removing boardporting.o(.ARM.exidx.text.BOARD_init), (8 bytes).
    Removing boardporting.o(.text.PORTD_init), (154 bytes).
    Removing boardporting.o(.ARM.exidx.text.PORTD_init), (8 bytes).
    Removing boardporting.o(.text.PORTA_init), (184 bytes).
    Removing boardporting.o(.ARM.exidx.text.PORTA_init), (8 bytes).
    Removing boardporting.o(.text.driver_up_pressed), (44 bytes).
    Removing boardporting.o(.ARM.exidx.text.driver_up_pressed), (8 bytes).
    Removing boardporting.o(.text.driver_down_pressed), (44 bytes).
    Removing boardporting.o(.ARM.exidx.text.driver_down_pressed), (8 bytes).
    Removing boardporting.o(.text.PORTE_init), (154 bytes).
    Removing boardporting.o(.ARM.exidx.text.PORTE_init), (8 bytes).
    Removing boardporting.o(.text.passenger_up_pressed), (62 bytes).
    Removing boardporting.o(.ARM.exidx.text.passenger_up_pressed), (8 bytes).
    Removing boardporting.o(.text.passenger_down_pressed), (62 bytes).
    Removing boardporting.o(.ARM.exidx.text.passenger_down_pressed), (8 bytes).
    Removing boardporting.o(.ARM.exidx.text.off_switch), (8 bytes).
    Removing boardporting.o(.ARM.exidx.text.on_switch), (8 bytes).
    Removing boardporting.o(.text.PORTC_init), (134 bytes).
    Removing boardporting.o(.ARM.exidx.text.PORTC_init), (8 bytes).
    Removing boardporting.o(.ARM.exidx.text.GPIOD_Handler), (8 bytes).
    Removing boardporting.o(.ARM.exidx.text.GPIOA_Handler), (8 bytes).
    Removing boardporting.o(.ARM.exidx.text.GPIOE_Handler), (8 bytes).
    Removing boardporting.o(.ARM.exidx.text.GPIOC_Handler), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.text.driver_worker), (2 bytes).
    Removing tasks.o(.ARM.exidx.text.driver_worker), (8 bytes).
    Removing tasks.o(.text.passenger_worker), (2 bytes).
    Removing tasks.o(.ARM.exidx.text.passenger_worker), (8 bytes).
    Removing tasks.o(.text.limit_worker), (2 bytes).
    Removing tasks.o(.ARM.exidx.text.limit_worker), (8 bytes).
    Removing tasks.o(.text.jam_worker), (2 bytes).
    Removing tasks.o(.ARM.exidx.text.jam_worker), (8 bytes).
    Removing states.o(.text), (0 bytes).
    Removing states.o(.text.create_queues), (156 bytes).
    Removing states.o(.ARM.exidx.text.create_queues), (8 bytes).
    Removing states.o(.text.create_semaphores), (148 bytes).
    Removing states.o(.ARM.exidx.text.create_semaphores), (8 bytes).
    Removing states.o(.text.create_mutex), (140 bytes).
    Removing states.o(.ARM.exidx.text.create_mutex), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.data.SystemCoreClock), (4 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.text.vListInitialise), (46 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.text.vListInitialiseItem), (14 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.text.vListInsert), (106 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.text.pxPortInitialiseStack), (94 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.text.prvTaskExitError), (76 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.text.xPortStartScheduler), (380 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.text.vPortSetupTimerInterrupt), (120 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.text.vPortEnableVFP), (20 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.text.prvPortStartFirstTask), (40 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.text.vPortEnterCritical), (86 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.text.vPortExitCritical), (74 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.text.vPortSuppressTicksAndSleep), (544 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing port.o(.data.uxCriticalNesting), (4 bytes).
    Removing port.o(.bss.xMaximumPossibleSuppressedTicks), (4 bytes).
    Removing port.o(.bss.ulTimerCountsForOneTick), (4 bytes).
    Removing port.o(.bss.ulStoppedTimerCompensation), (4 bytes).
    Removing heap_5.o(.text), (0 bytes).
    Removing heap_5.o(.text.pvPortMalloc), (404 bytes).
    Removing heap_5.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_5.o(.text.prvInsertBlockIntoFreeList), (198 bytes).
    Removing heap_5.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_5.o(.text.vPortFree), (186 bytes).
    Removing heap_5.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_5.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_5.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_5.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_5.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_5.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_5.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_5.o(.text.vPortDefineHeapRegions), (394 bytes).
    Removing heap_5.o(.ARM.exidx.text.vPortDefineHeapRegions), (8 bytes).
    Removing heap_5.o(.text.vPortGetHeapStats), (216 bytes).
    Removing heap_5.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing heap_5.o(.bss.pxEnd), (4 bytes).
    Removing heap_5.o(.bss.xFreeBytesRemaining), (4 bytes).
    Removing heap_5.o(.bss.xStart), (8 bytes).
    Removing heap_5.o(.bss.xMinimumEverFreeBytesRemaining), (4 bytes).
    Removing heap_5.o(.bss.xNumberOfSuccessfulAllocations), (4 bytes).
    Removing heap_5.o(.bss.xNumberOfSuccessfulFrees), (4 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (264 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreate), (154 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.prvInitialiseNewQueue), (78 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (628 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (528 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.text.prvUnlockQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (476 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.prvCopyDataFromQueue), (66 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueEmpty), (40 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks_1.o(.text), (0 bytes).
    Removing tasks_1.o(.text.xTaskCreate), (160 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks_1.o(.text.prvInitialiseNewTask), (292 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks_1.o(.text.prvAddNewTaskToReadyList), (340 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks_1.o(.text.vTaskDelete), (340 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks_1.o(.text.prvDeleteTCB), (24 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks_1.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks_1.o(.text.vTaskSuspendAll), (16 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks_1.o(.text.prvAddCurrentTaskToDelayedList), (290 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks_1.o(.text.xTaskResumeAll), (546 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks_1.o(.text.vTaskDelay), (110 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks_1.o(.text.eTaskGetState), (272 bytes).
    Removing tasks_1.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks_1.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks_1.o(.text.vTaskResume), (264 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks_1.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks_1.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskStartScheduler), (162 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks_1.o(.text.prvIdleTask), (154 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks_1.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetTickCount), (20 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks_1.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks_1.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks_1.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks_1.o(.text.vTaskStepTick), (204 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks_1.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks_1.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks_1.o(.text.vTaskPlaceOnEventList), (66 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.text.vTaskInternalSetTimeOutState), (36 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.text.xTaskCheckForTimeOut), (252 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks_1.o(.text.vTaskMissedYield), (14 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks_1.o(.text.eTaskConfirmSleepModeStatus), (128 bytes).
    Removing tasks_1.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks_1.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks_1.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetSchedulerState), (56 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks_1.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout), (386 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks_1.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks_1.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks_1.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks_1.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks_1.o(.text.prvInitialiseTaskLists), (142 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks_1.o(.text.prvCheckTasksWaitingTermination), (90 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks_1.o(.text.prvGetExpectedIdleTime), (124 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing tasks_1.o(.rodata.uxTopUsedPriority), (4 bytes).
    Removing tasks_1.o(.bss.uxTaskNumber), (4 bytes).
    Removing tasks_1.o(.bss.xTasksWaitingTermination), (20 bytes).
    Removing tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp), (4 bytes).
    Removing tasks_1.o(.bss.xSchedulerRunning), (4 bytes).
    Removing tasks_1.o(.bss.xSuspendedTaskList), (20 bytes).
    Removing tasks_1.o(.rodata.str1.1), (5 bytes).
    Removing tasks_1.o(.bss.xIdleTaskHandle), (4 bytes).
    Removing tasks_1.o(.bss.xDelayedTaskList1), (20 bytes).
    Removing tasks_1.o(.bss.xDelayedTaskList2), (20 bytes).

354 unused section(s) (total 23421 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    BoardPorting.c                           0x00000000   Number         0  boardporting.o ABSOLUTE
    DIO.c                                    0x00000000   Number         0  dio.o ABSOLUTE
    MotorDriver.c                            0x00000000   Number         0  motordriver.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    States.c                                 0x00000000   Number         0  states.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_5.c                                 0x00000000   Number         0  heap_5.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks_1.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_zi                             0x000002a8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002c4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002c6   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x000002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x000002ca   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x000002cc   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ce   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ce   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ce   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ce   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ce   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ce   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ce   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002d0   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002d0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002d0   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002d6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002d6   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002da   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002da   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002e2   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x000002e4   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x000002e4   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x000002e8   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x000002f0   Number         0  startup_tm4c123.o(.text)
    .text                                    0x000002f0   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000404   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0000048e   Section        0  heapauxi.o(.text)
    .text                                    0x00000494   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000004f8   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000542   Section        0  exit.o(.text)
    .text                                    0x00000554   Section        8  libspace.o(.text)
    .text                                    0x0000055c   Section        0  sys_exit.o(.text)
    .text                                    0x00000568   Section        2  use_no_semi.o(.text)
    .text                                    0x0000056a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x0000056c   Section        0  dio.o(.text.DIO_Init)
    [Anonymous Symbol]                       0x00000918   Section        0  dio.o(.text.DIO_WritePin)
    [Anonymous Symbol]                       0x00000a94   Section        0  boardporting.o(.text.GPIOA_Handler)
    [Anonymous Symbol]                       0x00000bcc   Section        0  boardporting.o(.text.GPIOC_Handler)
    [Anonymous Symbol]                       0x00000ca0   Section        0  boardporting.o(.text.GPIOD_Handler)
    [Anonymous Symbol]                       0x00000e1c   Section        0  boardporting.o(.text.GPIOE_Handler)
    [Anonymous Symbol]                       0x00000f20   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000f80   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000f90   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000fb0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000fb4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000ff0   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000010fc   Section        0  motordriver.o(.text.config_PWM_MOTOR)
    [Anonymous Symbol]                       0x000011fc   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00001214   Section        0  motordriver.o(.text.motor1_down)
    [Anonymous Symbol]                       0x00001234   Section        0  motordriver.o(.text.motor1_off)
    [Anonymous Symbol]                       0x00001254   Section        0  motordriver.o(.text.motor1_up)
    [Anonymous Symbol]                       0x00001274   Section        0  motordriver.o(.text.motor2_down)
    [Anonymous Symbol]                       0x00001294   Section        0  motordriver.o(.text.motor2_off)
    [Anonymous Symbol]                       0x000012b4   Section        0  motordriver.o(.text.motor2_up)
    [Anonymous Symbol]                       0x000012d4   Section        0  motordriver.o(.text.motor_module_init)
    [Anonymous Symbol]                       0x000012e0   Section        0  boardporting.o(.text.off_switch)
    [Anonymous Symbol]                       0x00001300   Section        0  boardporting.o(.text.on_switch)
    [Anonymous Symbol]                       0x00001324   Section        0  motordriver.o(.text.port_init)
    prvCopyDataToQueue                       0x00001359   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001358   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvNotifyQueueSetContainer               0x00001425   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001424   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvResetNextTaskUnblockTime              0x00001511   Thumb Code    60  tasks_1.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001510   Section        0  tasks_1.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x0000154c   Section        0  motordriver.o(.text.test_motor)
    [Anonymous Symbol]                       0x00001574   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000015bc   Section        0  tasks_1.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x000015c8   Section        0  port.o(.text.vPortValidateInterruptPriority)
    __tagsym$$used.0                         0x0000164c   Number         0  tasks_1.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000164c   Section        0  tasks_1.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000170c   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x000018c8   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00001a4c   Section        0  tasks_1.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00001cac   Section        0  tasks_1.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00001de4   Section        0  tasks_1.o(.text.xTaskRemoveFromEventList)
    $v0                                      0x00001f76   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00001f76   Section       26  fpinit.o(x$fpl$fpinit)
    .bss                                     0x20000000   Section       96  libspace.o(.bss)
    __tagsym$$used.1                         0x20000080   Number         0  tasks_1.o(.bss.pxCurrentTCB)
    pxDelayedTaskList                        0x20000084   Data           4  tasks_1.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000084   Section        0  tasks_1.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000088   Data           4  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000088   Section        0  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x2000008c   Data         100  tasks_1.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000008c   Section        0  tasks_1.o(.bss.pxReadyTasksLists)
    ucMaxSysCallPriority                     0x200000f0   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x200000f0   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x200000f4   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x200000f4   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x200000f8   Data           4  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200000f8   Section        0  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    uxSchedulerSuspended                     0x200000fc   Data           4  tasks_1.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200000fc   Section        0  tasks_1.o(.bss.uxSchedulerSuspended)
    uxTopReadyPriority                       0x20000100   Data           4  tasks_1.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20000100   Section        0  tasks_1.o(.bss.uxTopReadyPriority)
    xNextTaskUnblockTime                     0x20000104   Data           4  tasks_1.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20000104   Section        0  tasks_1.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20000108   Data           4  tasks_1.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20000108   Section        0  tasks_1.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x2000010c   Data           4  tasks_1.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x2000010c   Section        0  tasks_1.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20000110   Data          20  tasks_1.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20000110   Section        0  tasks_1.o(.bss.xPendingReadyList)
    xTickCount                               0x20000124   Data           4  tasks_1.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20000124   Section        0  tasks_1.o(.bss.xTickCount)
    xYieldPending                            0x20000128   Data           4  tasks_1.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20000128   Section        0  tasks_1.o(.bss.xYieldPending)
    Heap_Mem                                 0x20000130   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20000130   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20000130   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20000130   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20000330   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x000002a9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002c5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x000002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x000002cd   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002cf   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002cf   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002cf   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002cf   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002cf   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002cf   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002cf   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002d1   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002d1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002d1   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002d7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002d7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002db   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002db   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002e3   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x000002e5   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x000002e5   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x000002e9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x000002f1   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x000003e5   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000405   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000405   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0000046b   Thumb Code     0  rt_memcpy_v6.o(.text)
    __use_two_region_memory                  0x0000048f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000491   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000493   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000495   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000495   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000495   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000004dd   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x000004f9   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000543   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000555   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000555   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000555   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000055d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000569   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000569   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000056b   Thumb Code     0  indicate_semi.o(.text)
    DIO_Init                                 0x0000056d   Thumb Code   940  dio.o(.text.DIO_Init)
    DIO_WritePin                             0x00000919   Thumb Code   378  dio.o(.text.DIO_WritePin)
    GPIOA_Handler                            0x00000a95   Thumb Code   310  boardporting.o(.text.GPIOA_Handler)
    GPIOC_Handler                            0x00000bcd   Thumb Code   212  boardporting.o(.text.GPIOC_Handler)
    GPIOD_Handler                            0x00000ca1   Thumb Code   380  boardporting.o(.text.GPIOD_Handler)
    GPIOE_Handler                            0x00000e1d   Thumb Code   248  boardporting.o(.text.GPIOE_Handler)
    PendSV_Handler                           0x00000f21   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000f91   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000fb5   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000ff1   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    config_PWM_MOTOR                         0x000010fd   Thumb Code   256  motordriver.o(.text.config_PWM_MOTOR)
    main                                     0x000011fd   Thumb Code    22  main.o(.text.main)
    motor1_down                              0x00001215   Thumb Code    30  motordriver.o(.text.motor1_down)
    motor1_off                               0x00001235   Thumb Code    32  motordriver.o(.text.motor1_off)
    motor1_up                                0x00001255   Thumb Code    32  motordriver.o(.text.motor1_up)
    motor2_down                              0x00001275   Thumb Code    30  motordriver.o(.text.motor2_down)
    motor2_off                               0x00001295   Thumb Code    32  motordriver.o(.text.motor2_off)
    motor2_up                                0x000012b5   Thumb Code    30  motordriver.o(.text.motor2_up)
    motor_module_init                        0x000012d5   Thumb Code    12  motordriver.o(.text.motor_module_init)
    off_switch                               0x000012e1   Thumb Code    30  boardporting.o(.text.off_switch)
    on_switch                                0x00001301   Thumb Code    34  boardporting.o(.text.on_switch)
    port_init                                0x00001325   Thumb Code    50  motordriver.o(.text.port_init)
    test_motor                               0x0000154d   Thumb Code    40  motordriver.o(.text.test_motor)
    uxListRemove                             0x00001575   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x000015bd   Thumb Code    12  tasks_1.o(.text.uxTaskGetNumberOfTasks)
    vPortValidateInterruptPriority           0x000015c9   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vTaskSwitchContext                       0x0000164d   Thumb Code   190  tasks_1.o(.text.vTaskSwitchContext)
    xQueueGenericSendFromISR                 0x0000170d   Thumb Code   444  queue.o(.text.xQueueGenericSendFromISR)
    xQueueGiveFromISR                        0x000018c9   Thumb Code   386  queue.o(.text.xQueueGiveFromISR)
    xTaskIncrementTick                       0x00001a4d   Thumb Code   608  tasks_1.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00001cad   Thumb Code   312  tasks_1.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00001de5   Thumb Code   402  tasks_1.o(.text.xTaskRemoveFromEventList)
    _fp_init                                 0x00001f77   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00001f8f   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00001f8f   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00001f90   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001fa0   Number         0  anon$$obj.o(Region$$Table)
    __libspace_start                         0x20000000   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000060   Data           0  libspace.o(.bss)
    driver_queue                             0x20000060   Data           4  main.o(.bss.driver_queue)
    driver_semaphore                         0x20000064   Data           4  main.o(.bss.driver_semaphore)
    jam_queue                                0x20000068   Data           4  main.o(.bss.jam_queue)
    jam_semaphore                            0x2000006c   Data           4  main.o(.bss.jam_semaphore)
    limit_queue                              0x20000070   Data           4  main.o(.bss.limit_queue)
    limit_semaphore                          0x20000074   Data           4  main.o(.bss.limit_semaphore)
    passenger_queue                          0x20000078   Data           4  main.o(.bss.passenger_queue)
    passenger_semaphore                      0x2000007c   Data           4  main.o(.bss.passenger_semaphore)
    pxCurrentTCB                             0x20000080   Data           4  tasks_1.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000002f1

  Load Region LR_1 (Base: 0x00000000, Size: 0x00001fa0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001fa0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          133    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          505  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          674    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001c   Code   RO          676    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002c4   0x000002c4   0x00000002   Code   RO          536    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002c6   0x000002c6   0x00000004   Code   RO          542    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          545    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          547    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          550    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          552    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          554    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          557    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          559    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          561    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          563    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          565    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          567    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          569    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          571    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          573    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          575    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          577    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          581    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          583    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          585    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000000   Code   RO          587    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x000002ca   0x000002ca   0x00000002   Code   RO          588    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x000002cc   0x000002cc   0x00000002   Code   RO          610    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ce   0x000002ce   0x00000000   Code   RO          625    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ce   0x000002ce   0x00000000   Code   RO          627    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ce   0x000002ce   0x00000000   Code   RO          630    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ce   0x000002ce   0x00000000   Code   RO          633    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ce   0x000002ce   0x00000000   Code   RO          635    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ce   0x000002ce   0x00000000   Code   RO          638    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ce   0x000002ce   0x00000002   Code   RO          639    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002d0   0x000002d0   0x00000000   Code   RO          507    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002d0   0x000002d0   0x00000000   Code   RO          513    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002d0   0x000002d0   0x00000006   Code   RO          525    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002d6   0x000002d6   0x00000000   Code   RO          515    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002d6   0x000002d6   0x00000004   Code   RO          516    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002da   0x000002da   0x00000000   Code   RO          518    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002da   0x000002da   0x00000008   Code   RO          519    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002e2   0x000002e2   0x00000002   Code   RO          540    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x000002e4   0x000002e4   0x00000000   Code   RO          590    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x000002e4   0x000002e4   0x00000004   Code   RO          591    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x000002e8   0x000002e8   0x00000006   Code   RO          592    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x000002ee   0x000002ee   0x00000002   PAD
    0x000002f0   0x000002f0   0x00000114   Code   RO          134  * .text               startup_tm4c123.o
    0x00000404   0x00000404   0x0000008a   Code   RO          497    .text               c_w.l(rt_memcpy_v6.o)
    0x0000048e   0x0000048e   0x00000006   Code   RO          503    .text               c_w.l(heapauxi.o)
    0x00000494   0x00000494   0x00000064   Code   RO          508    .text               c_w.l(rt_memcpy_w.o)
    0x000004f8   0x000004f8   0x0000004a   Code   RO          527    .text               c_w.l(sys_stackheap_outer.o)
    0x00000542   0x00000542   0x00000012   Code   RO          529    .text               c_w.l(exit.o)
    0x00000554   0x00000554   0x00000008   Code   RO          537    .text               c_w.l(libspace.o)
    0x0000055c   0x0000055c   0x0000000c   Code   RO          600    .text               c_w.l(sys_exit.o)
    0x00000568   0x00000568   0x00000002   Code   RO          615    .text               c_w.l(use_no_semi.o)
    0x0000056a   0x0000056a   0x00000000   Code   RO          617    .text               c_w.l(indicate_semi.o)
    0x0000056a   0x0000056a   0x00000002   PAD
    0x0000056c   0x0000056c   0x000003ac   Code   RO           23    .text.DIO_Init      dio.o
    0x00000918   0x00000918   0x0000017a   Code   RO           25    .text.DIO_WritePin  dio.o
    0x00000a92   0x00000a92   0x00000002   PAD
    0x00000a94   0x00000a94   0x00000136   Code   RO           91    .text.GPIOA_Handler  boardporting.o
    0x00000bca   0x00000bca   0x00000002   PAD
    0x00000bcc   0x00000bcc   0x000000d4   Code   RO           95    .text.GPIOC_Handler  boardporting.o
    0x00000ca0   0x00000ca0   0x0000017c   Code   RO           89    .text.GPIOD_Handler  boardporting.o
    0x00000e1c   0x00000e1c   0x000000f8   Code   RO           93    .text.GPIOE_Handler  boardporting.o
    0x00000f14   0x00000f14   0x0000000c   PAD
    0x00000f20   0x00000f20   0x00000064   Code   RO          193    .text.PendSV_Handler  port.o
    0x00000f84   0x00000f84   0x0000000c   PAD
    0x00000f90   0x00000f90   0x00000024   Code   RO          177    .text.SVC_Handler   port.o
    0x00000fb4   0x00000fb4   0x0000003c   Code   RO          195    .text.SysTick_Handler  port.o
    0x00000ff0   0x00000ff0   0x0000010c   Code   RO          145    .text.SystemInit    system_tm4c123.o
    0x000010fc   0x000010fc   0x00000100   Code   RO           56    .text.config_PWM_MOTOR  motordriver.o
    0x000011fc   0x000011fc   0x00000016   Code   RO            2    .text.main          main.o
    0x00001212   0x00001212   0x00000002   PAD
    0x00001214   0x00001214   0x0000001e   Code   RO           46    .text.motor1_down   motordriver.o
    0x00001232   0x00001232   0x00000002   PAD
    0x00001234   0x00001234   0x00000020   Code   RO           48    .text.motor1_off    motordriver.o
    0x00001254   0x00001254   0x00000020   Code   RO           44    .text.motor1_up     motordriver.o
    0x00001274   0x00001274   0x0000001e   Code   RO           52    .text.motor2_down   motordriver.o
    0x00001292   0x00001292   0x00000002   PAD
    0x00001294   0x00001294   0x00000020   Code   RO           54    .text.motor2_off    motordriver.o
    0x000012b4   0x000012b4   0x0000001e   Code   RO           50    .text.motor2_up     motordriver.o
    0x000012d2   0x000012d2   0x00000002   PAD
    0x000012d4   0x000012d4   0x0000000c   Code   RO           40    .text.motor_module_init  motordriver.o
    0x000012e0   0x000012e0   0x0000001e   Code   RO           83    .text.off_switch    boardporting.o
    0x000012fe   0x000012fe   0x00000002   PAD
    0x00001300   0x00001300   0x00000022   Code   RO           85    .text.on_switch     boardporting.o
    0x00001322   0x00001322   0x00000002   PAD
    0x00001324   0x00001324   0x00000032   Code   RO           42    .text.port_init     motordriver.o
    0x00001356   0x00001356   0x00000002   PAD
    0x00001358   0x00001358   0x000000cc   Code   RO          267    .text.prvCopyDataToQueue  queue.o
    0x00001424   0x00001424   0x000000ec   Code   RO          269    .text.prvNotifyQueueSetContainer  queue.o
    0x00001510   0x00001510   0x0000003c   Code   RO          336    .text.prvResetNextTaskUnblockTime  tasks_1.o
    0x0000154c   0x0000154c   0x00000028   Code   RO           58    .text.test_motor    motordriver.o
    0x00001574   0x00001574   0x00000048   Code   RO          164    .text.uxListRemove  list.o
    0x000015bc   0x000015bc   0x0000000c   Code   RO          380    .text.uxTaskGetNumberOfTasks  tasks_1.o
    0x000015c8   0x000015c8   0x00000084   Code   RO          199    .text.vPortValidateInterruptPriority  port.o
    0x0000164c   0x0000164c   0x000000be   Code   RO          360    .text.vTaskSwitchContext  tasks_1.o
    0x0000170a   0x0000170a   0x00000002   PAD
    0x0000170c   0x0000170c   0x000001bc   Code   RO          275    .text.xQueueGenericSendFromISR  queue.o
    0x000018c8   0x000018c8   0x00000182   Code   RO          277    .text.xQueueGiveFromISR  queue.o
    0x00001a4a   0x00001a4a   0x00000002   PAD
    0x00001a4c   0x00001a4c   0x00000260   Code   RO          374    .text.xTaskIncrementTick  tasks_1.o
    0x00001cac   0x00001cac   0x00000138   Code   RO          436    .text.xTaskPriorityDisinherit  tasks_1.o
    0x00001de4   0x00001de4   0x00000192   Code   RO          404    .text.xTaskRemoveFromEventList  tasks_1.o
    0x00001f76   0x00001f76   0x0000001a   Code   RO          598    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00001f90   0x00001f90   0x00000010   Data   RO          673    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00001fa0, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region ER_ZI (Exec base: 0x20000000, Load base: 0x00001fa0, Size: 0x00000330, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000        -       0x00000060   Zero   RW          538    .bss                c_w.l(libspace.o)
    0x20000060        -       0x00000004   Zero   RW            8    .bss.driver_queue   main.o
    0x20000064        -       0x00000004   Zero   RW            4    .bss.driver_semaphore  main.o
    0x20000068        -       0x00000004   Zero   RW           11    .bss.jam_queue      main.o
    0x2000006c        -       0x00000004   Zero   RW            7    .bss.jam_semaphore  main.o
    0x20000070        -       0x00000004   Zero   RW           10    .bss.limit_queue    main.o
    0x20000074        -       0x00000004   Zero   RW            6    .bss.limit_semaphore  main.o
    0x20000078        -       0x00000004   Zero   RW            9    .bss.passenger_queue  main.o
    0x2000007c        -       0x00000004   Zero   RW            5    .bss.passenger_semaphore  main.o
    0x20000080        -       0x00000004   Zero   RW          464    .bss.pxCurrentTCB   tasks_1.o
    0x20000084        -       0x00000004   Zero   RW          475    .bss.pxDelayedTaskList  tasks_1.o
    0x20000088        -       0x00000004   Zero   RW          476    .bss.pxOverflowDelayedTaskList  tasks_1.o
    0x2000008c        -       0x00000064   Zero   RW          466    .bss.pxReadyTasksLists  tasks_1.o
    0x200000f0        -       0x00000001   Zero   RW          201    .bss.ucMaxSysCallPriority  port.o
    0x200000f1   0x00001fa0   0x00000003   PAD
    0x200000f4        -       0x00000004   Zero   RW          202    .bss.ulMaxPRIGROUPValue  port.o
    0x200000f8        -       0x00000004   Zero   RW          471    .bss.uxCurrentNumberOfTasks  tasks_1.o
    0x200000fc        -       0x00000004   Zero   RW          473    .bss.uxSchedulerSuspended  tasks_1.o
    0x20000100        -       0x00000004   Zero   RW          467    .bss.uxTopReadyPriority  tasks_1.o
    0x20000104        -       0x00000004   Zero   RW          482    .bss.xNextTaskUnblockTime  tasks_1.o
    0x20000108        -       0x00000004   Zero   RW          484    .bss.xNumOfOverflows  tasks_1.o
    0x2000010c        -       0x00000004   Zero   RW          483    .bss.xPendedTicks   tasks_1.o
    0x20000110        -       0x00000014   Zero   RW          479    .bss.xPendingReadyList  tasks_1.o
    0x20000124        -       0x00000004   Zero   RW          474    .bss.xTickCount     tasks_1.o
    0x20000128        -       0x00000004   Zero   RW          478    .bss.xYieldPending  tasks_1.o
    0x2000012c   0x00001fa0   0x00000004   PAD
    0x20000130        -       0x00000000   Zero   RW          132    HEAP                startup_tm4c123.o
    0x20000130        -       0x00000200   Zero   RW          131    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1214          0          0          0          0       3575   boardporting.o
      1318         18          0          0          0       1920   dio.o
        72          0          0          0          0       2350   list.o
        22          0          0          0         32       1023   main.o
       544          0          0          0          0       1515   motordriver.o
       328          8          0          0          5       5017   port.o
      1270          0          0          0          0      16717   queue.o
       276         24        620          0        512       5496   startup_tm4c123.o
       268          0          0          0          0       6760   system_tm4c123.o
      1584          0          0          0        164      26995   tasks_1.o

    ----------------------------------------------------------------------
      6942         62        636          0        720      71368   Object Totals
         0          0         16          0          0          0   (incl. Generated)
        46         12          0          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       518         16          0          0         96        848   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       488         16          0          0         96        732   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       518         16          0          0         96        848   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7460         78        636          0        816      71728   Grand Totals
      7460         78        636          0        816      71728   ELF Image Totals
      7460         78        636          0          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8096 (   7.91kB)
    Total RW  Size (RW Data + ZI Data)               816 (   0.80kB)
    Total ROM Size (Code + RO Data + RW Data)       8096 (   7.91kB)

==============================================================================

